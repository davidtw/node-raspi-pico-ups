{"version":3,"sources":["pico.es6"],"names":["module","exports","i2c","require","address","wire","device","powerModes","readBytes","start","length","Promise","resolve","err","res","getPowerModeLabel","mode","undefined","getCurrentPowerMode","getCurrentBatteryVoltage","getCurrentRpiVoltage","getTemperature"],"mappings":";;AAAAA,OAAOC,OAAP,GAAkB,YAAY;AAC1B,QAAMC,MAAMC,QAAQ,KAAR,CAAZ;AACA,QAAMC,UAAU,IAAhB;AACA,QAAMC,OAAO,IAAIH,GAAJ,CAAQE,OAAR,EAAiB,EAACE,QAAQ,YAAT,EAAjB,CAAb;;AAEA,QAAMC,aAAa,CAAC,SAAD,EAAY,KAAZ,CAAnB;;AAEA,aAASC,SAAT,CAAmBC,KAAnB,EAA0BC,MAA1B,EAAkC;AAC9B,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5BP,iBAAKG,SAAL,CAAeC,KAAf,EAAsBC,MAAtB,EAA8B,UAAUG,GAAV,EAAeC,GAAf,EAAoB;AAC9CF,wBAAQE,IAAI,CAAJ,CAAR;AACH,aAFD;AAGH,SAJM,CAAP;AAKH;;AAED,WAAO;AACHC,yBADG,6BACgBC,IADhB,EACsB;AACrB,gBAAG,CAACA,IAAD,IAAUA,OAAO,CAAR,GAAaT,WAAWG,MAApC,EAA4C;AACxC,uBAAOO,SAAP;AACH;AACD,mBAAOV,WAAWS,OAAO,CAAlB,CAAP;AACH,SANE;;AAOHE,6BAAqB,+BAAM;AACvB,mBAAOV,UAAU,CAAV,EAAa,CAAb,CAAP;AACH,SATE;AAUHW,kCAA0B,oCAAM;AAC5B,mBAAOX,UAAU,CAAV,EAAa,CAAb,CAAP;AACH,SAZE;AAaHY,8BAAsB,gCAAM;AACxB,mBAAOZ,UAAU,EAAV,EAAc,CAAd,CAAP;AACH,SAfE;AAgBHa,wBAAgB,0BAAM;AAClB,mBAAOb,UAAU,EAAV,EAAc,CAAd,CAAP;AACH;AAlBE,KAAP;AAoBH,CAnCiB,EAAlB","file":"pico.js","sourcesContent":["module.exports = (function () {\r\n    const i2c = require('i2c');\r\n    const address = 0x69;\r\n    const wire = new i2c(address, {device: '/dev/i2c-1'});\r\n\r\n    const powerModes = ['battery', 'usb'];\r\n\r\n    function readBytes(start, length) {\r\n        return new Promise((resolve) => {\r\n            wire.readBytes(start, length, function (err, res) {\r\n                resolve(res[0]);\r\n            });\r\n        });\r\n    }\r\n\r\n    return {\r\n        getPowerModeLabel (mode) {\r\n            if(!mode || (mode + 1) > powerModes.length) {\r\n                return undefined;\r\n            }\r\n            return powerModes[mode + 1];\r\n        },\r\n        getCurrentPowerMode: () => {\r\n            return readBytes(0, 1);\r\n        },\r\n        getCurrentBatteryVoltage: () => {\r\n            return readBytes(8, 2);\r\n        },\r\n        getCurrentRpiVoltage: () => {\r\n            return readBytes(10, 2);\r\n        },\r\n        getTemperature: () => {\r\n            return readBytes(27, 1);\r\n        }\r\n    };\r\n}());"]}