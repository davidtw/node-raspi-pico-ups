{"version":3,"sources":["pico.es6"],"names":["module","exports","i2c","require","i2c1","openSync","address","powerModes","readByte","command","readByteSync","readWord","readWordSync","getPowerModeLabel","mode","length","undefined","getCurrentPowerMode","getCurrentBatteryVoltage","parseInt","getCurrentRpiVoltage","getTemperature"],"mappings":";;AAAAA,OAAOC,OAAP,GAAkB,YAAY;AAC1B,QAAMC,MAAMC,QAAQ,SAAR,CAAZ;AACA,QAAMC,OAAOF,IAAIG,QAAJ,CAAa,CAAb,CAAb;AACA,QAAMC,UAAU,IAAhB;;AAEA,QAAMC,aAAa,CAAC,KAAD,EAAQ,SAAR,CAAnB;;AAEA,aAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACvB,eAAOL,KAAKM,YAAL,CAAkBJ,OAAlB,EAA2BG,OAA3B,CAAP;AACH;;AAED,aAASE,QAAT,CAAkBF,OAAlB,EAA2B;AACvB,eAAOL,KAAKQ,YAAL,CAAkBN,OAAlB,EAA2BG,OAA3B,CAAP;AACH;;AAED,WAAO;AACHI,yBADG,6BACgBC,IADhB,EACsB;AACrB,gBAAI,CAACA,IAAD,IAASA,QAAQP,WAAWQ,MAAhC,EAAwC;AACpC,uBAAOC,SAAP;AACH;AACD,mBAAOT,WAAWO,OAAO,CAAlB,CAAP;AACH,SANE;;AAOHG,6BAAqB,+BAAM;AACvB,mBAAOT,SAAS,IAAT,CAAP;AACH,SATE;AAUHU,kCAA0B,oCAAM;AAC5B,mBAAOC,SAASR,SAAS,IAAT,CAAT,EAAyB,EAAzB,CAAP;AACH,SAZE;AAaHS,8BAAsB,gCAAM;AACxB,mBAAOD,SAASR,SAAS,IAAT,CAAT,EAAyB,EAAzB,CAAP;AACH,SAfE;AAgBHU,wBAAgB,0BAAM;AAClB,mBAAOF,SAASR,SAAS,IAAT,CAAT,EAAyB,EAAzB,CAAP;AACH;AAlBE,KAAP;AAoBH,CAnCiB,EAAlB","file":"pico.js","sourcesContent":["module.exports = (function () {\r\n    const i2c = require('i2c-bus');\r\n    const i2c1 = i2c.openSync(1);\r\n    const address = 0x69;\r\n\r\n    const powerModes = ['usb', 'battery'];\r\n\r\n    function readByte(command) {\r\n        return i2c1.readByteSync(address, command);\r\n    }\r\n\r\n    function readWord(command) {\r\n        return i2c1.readWordSync(address, command);\r\n    }\r\n\r\n    return {\r\n        getPowerModeLabel (mode) {\r\n            if (!mode || mode >= powerModes.length) {\r\n                return undefined;\r\n            }\r\n            return powerModes[mode - 1];\r\n        },\r\n        getCurrentPowerMode: () => {\r\n            return readByte(0x00);\r\n        },\r\n        getCurrentBatteryVoltage: () => {\r\n            return parseInt(readWord(0x08), 16);\r\n        },\r\n        getCurrentRpiVoltage: () => {\r\n            return parseInt(readWord(0x0a), 16);\r\n        },\r\n        getTemperature: () => {\r\n            return parseInt(readWord(0x1b), 16);\r\n        }\r\n    };\r\n}());"]}